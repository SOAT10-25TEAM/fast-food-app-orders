name: 1-Terraform Deploy

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
  push:
    branches: [ configure_aws_deployment ]
    paths:
      - 'terraform/**'
  workflow_dispatch:  # Manual trigger

env:
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          terraform_wrapper: false

      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/configure_aws_deployment'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Get Cluster Info
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/configure_aws_deployment'
        working-directory: ./terraform
        run: |
          echo "ðŸŽ‰ Infrastructure deployed successfully!"
          echo "ðŸ“‹ Cluster Information:"
          terraform output cluster_name
          terraform output cluster_endpoint
          terraform output kubectl_config_command

      - name: Update kubeconfig
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/configure_aws_deployment'
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name fast-food-orders
          kubectl get nodes
          echo "âœ… kubectl configured and cluster accessible"
